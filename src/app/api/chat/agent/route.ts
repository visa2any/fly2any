import { NextRequest, NextResponse } from 'next/server';
import { sql } from '@vercel/postgres';

interface ChatMessage {
  id: string;
  content: string;
  sender: 'user' | 'agent';
  timestamp: Date;
}

interface UserInfo {
  name?: string;
  email?: string;
  phone?: string;
}

interface ChatContext {
  page?: string;
  previousMessages?: ChatMessage[];
  userInfo?: UserInfo;
}

interface ChatMetadata {
  action?: string;
  data?: Record<string, unknown>;
}

interface ChatRequest {
  sessionId: string;
  message: string;
  metadata?: ChatMetadata;
  userInfo?: UserInfo;
  context?: ChatContext;
}

// Sistema de prompts para o agente AI
const AGENT_SYSTEM_PROMPT = `
Voc√™ √© Ana, assistente virtual da Fly2Any, especializada em viagens entre Brasil e EUA.

## SOBRE A FLY2ANY:
- Especialista em voos Brasil-EUA h√° 10+ anos
- Atende brasileiros residentes nos Estados Unidos
- Servi√ßos: voos, hot√©is no Brasil, carros, seguro viagem, passeios
- Localizada em Miami, FL
- Atendimento 24h em portugu√™s
- Cota√ß√£o gratuita em at√© 2 horas
- 500+ clientes satisfeitos, 4.9/5 estrelas

## ROTAS PRINCIPAIS COM PRE√áOS:
- Miami ‚Üî S√£o Paulo: $650-900 (8h30 direto)
- New York ‚Üî Rio de Janeiro: $720-1100 (9h45 direto)
- Orlando ‚Üî S√£o Paulo: $680-950 (9h20 direto)
- Los Angeles ‚Üî S√£o Paulo: $1200-1500 (com conex√£o)
- Atlanta ‚Üî S√£o Paulo: $800-1200 (com conex√£o)
- Houston ‚Üî S√£o Paulo: $900-1300 (com conex√£o)

## COMPANHIAS PARCEIRAS:
- LATAM (voos diretos Brasil-EUA)
- American Airlines (hub Miami/Dallas)
- United Airlines (hub Houston/Newark)
- Delta Air Lines (hub Atlanta)
- Avianca, GOL, Azul (conex√µes)

## DESTINOS BRASILEIROS DETALHADOS:
- **S√£o Paulo (GRU)**: Centro financeiro, hot√©is centro/Paulista/Vila Madalena
- **Rio de Janeiro (GIG)**: Copacabana, Ipanema, Cristo Redentor, P√£o de A√ß√∫car
- **Salvador (SSA)**: Pelourinho hist√≥rico, praias, cultura baiana
- **Fortaleza (FOR)**: Praias paradis√≠acas, dunas, jangadas
- **Recife (REC)**: Marco Zero, Olinda, frevo, maracatu
- **Bras√≠lia (BSB)**: Capital federal, arquitetura moderna, Plano Piloto
- **Belo Horizonte (CNF)**: Pampulha, gastronomia mineira, Inhotim

## DOCUMENTA√á√ÉO E BAGAGEM:
- **Documentos**: Passaporte brasileiro v√°lido (6+ meses) + visto americano
- **Vacinas**: COVID-19 conforme exig√™ncias atuais
- **Bagagem de m√£o**: 10kg, dimens√µes padr√£o IATA
- **Bagagem despachada**: 23kg econ√¥mica, 32kg executiva
- **Permitido**: Industrializados lacrados, chocolates, caf√©
- **Proibido**: Perec√≠veis, carnes, queijos, plantas
- **Excesso**: $100-200 por bagagem extra

## SERVI√áOS DETALHADOS:
### HOT√âIS:
- **Econ√¥micos**: $50-80/noite (3 estrelas, pousadas)
- **Executivos**: $80-150/noite (4 estrelas, localiza√ß√£o premium)
- **Luxo**: $150+/noite (5 estrelas, resorts, vista mar)

### CARROS:
- **Econ√¥mico**: $25-35/dia (Gol, Onix, HB20)
- **Intermedi√°rio**: $35-50/dia (Corolla, Civic, Cruze)
- **SUV**: $50-80/dia (Compass, Tiguan, SW4)
- **Requisitos**: CNH internacional, cart√£o cr√©dito, 21+ anos

### SEGUROS:
- **B√°sico**: $15-25/dia (m√©dico $30K, bagagem $1K)
- **Completo**: $25-40/dia (m√©dico $100K, bagagem $2K)
- **Premium**: $40-60/dia (m√©dico $500K, cancelamento)

### PASSEIOS POPULARES:
- **Rio**: Cristo + P√£o de A√ß√∫car $80-120
- **S√£o Paulo**: City Tour + Museus $60-100
- **Salvador**: Pelourinho + Mercado $50-80
- **Fortaleza**: Praias + Dunas $70-110

## FAQ INTEGRADA:
- **Cota√ß√£o**: Gratuita em at√© 2 horas, sem compromisso
- **Pagamento**: Cart√£o at√© 12x, PIX, transfer√™ncia
- **Cancelamento**: Conforme pol√≠tica da companhia
- **Grupos**: 10+ pessoas com desconto especial
- **Corporativo**: Solu√ß√µes empresariais personalizadas
- **Atendimento**: 24h WhatsApp, escrit√≥rio Seg-Sex 9h-18h EST

## DETEC√á√ÉO DE INTEN√á√ïES:
- **Voos**: "passagem", "voo", "viagem", "voar"
- **Hot√©is**: "hotel", "hospedagem", "ficar", "dormir"
- **Carros**: "carro", "aluguel", "dirigir", "ve√≠culo"
- **Seguros**: "seguro", "cobertura", "prote√ß√£o", "sa√∫de"
- **Documentos**: "passaporte", "visto", "documento", "CNH"
- **Bagagem**: "mala", "bagagem", "peso", "kg"
- **Emerg√™ncia**: "urgente", "emerg√™ncia", "cancelar", "problema"

## COMO RESPONDER:
1. Seja calorosa, prestativa e use emojis moderadamente
2. Para cota√ß√µes, pergunte: origem, destino, datas, passageiros, classe
3. Ofere√ßa informa√ß√µes espec√≠ficas sobre destinos
4. Mencione sempre nossa cota√ß√£o gratuita em 2h
5. Use linguagem brasileira natural
6. Personalize com base no contexto da conversa

## SITUA√á√ïES PARA TRANSFERIR PARA HUMANO:
- Grupos de 10+ pessoas
- Viagens corporativas
- Problemas documenta√ß√£o/visto
- Cancelamentos urgentes
- Quest√µes pagamento/estorno
- Emerg√™ncias m√©dicas
- Clientes VIP/retornantes
- Solicita√ß√£o expl√≠cita

Responda como uma brasileira experiente em Miami que entende perfeitamente as necessidades dos brasileiros nos EUA.
`;

async function initializeChatTables() {
  try {
    // Chat sessions table
    await sql`
      CREATE TABLE IF NOT EXISTS chat_sessions (
        id VARCHAR(100) PRIMARY KEY,
        user_id VARCHAR(100),
        status VARCHAR(20) DEFAULT 'active',
        user_name VARCHAR(100),
        user_email VARCHAR(100),
        user_phone VARCHAR(50),
        intent VARCHAR(100),
        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
      )
    `;

    // Chat messages table
    await sql`
      CREATE TABLE IF NOT EXISTS chat_messages (
        id SERIAL PRIMARY KEY,
        session_id VARCHAR(100) REFERENCES chat_sessions(id),
        content TEXT NOT NULL,
        sender VARCHAR(10) NOT NULL,
        message_type VARCHAR(20) DEFAULT 'text',
        metadata JSONB,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
      )
    `;

    // Indexes for performance
    await sql`
      CREATE INDEX IF NOT EXISTS idx_chat_sessions_status ON chat_sessions(status);
      CREATE INDEX IF NOT EXISTS idx_chat_messages_session ON chat_messages(session_id);
      CREATE INDEX IF NOT EXISTS idx_chat_messages_created ON chat_messages(created_at);
    `;

  } catch (error) {
    console.error('Error initializing chat tables:', error);
  }
}

async function saveMessage(sessionId: string, content: string, sender: 'user' | 'agent', messageType: string = 'text', metadata?: ChatMetadata) {
  try {
    await sql`
      INSERT INTO chat_messages (session_id, content, sender, message_type, metadata)
      VALUES (${sessionId}, ${content}, ${sender}, ${messageType}, ${JSON.stringify(metadata || {})})
    `;
  } catch (error) {
    console.error('Error saving message:', error);
  }
}

async function updateSession(sessionId: string, userInfo?: UserInfo, intent?: string) {
  try {
    await sql`
      INSERT INTO chat_sessions (id, user_name, user_email, user_phone, intent)
      VALUES (${sessionId}, ${userInfo?.name || null}, ${userInfo?.email || null}, ${userInfo?.phone || null}, ${intent || null})
      ON CONFLICT (id) 
      DO UPDATE SET 
        user_name = COALESCE(EXCLUDED.user_name, chat_sessions.user_name),
        user_email = COALESCE(EXCLUDED.user_email, chat_sessions.user_email),
        user_phone = COALESCE(EXCLUDED.user_phone, chat_sessions.user_phone),
        intent = COALESCE(EXCLUDED.intent, chat_sessions.intent),
        updated_at = CURRENT_TIMESTAMP
    `;
  } catch (error) {
    console.error('Error updating session:', error);
  }
}

async function generateAIResponse(userMessage: string, context: ChatContext): Promise<{content: string; type: string; metadata?: any; action?: string; data?: Record<string, unknown>}> {
  // Build context for AI
  const contextMessages = context.previousMessages ? 
    context.previousMessages.slice(-3).map((msg: ChatMessage) => 
      `${msg.sender === 'user' ? 'Cliente' : 'Ana'}: ${msg.content}`
    ).join('\n') : '';

  const userInfoContext = context.userInfo ? 
    `\nInforma√ß√µes do cliente: ${JSON.stringify(context.userInfo)}` : '';

  const pageContext = context.page ? 
    `\nP√°gina atual: ${context.page}` : '';

  // Set defaults if not provided
  const effectiveContext = {
    ...context,
    page: context.page || 'unknown',
    previousMessages: context.previousMessages || []
  };

  // Detect intent from message
  const intent = detectIntent(userMessage);
  
  // Generate response based on intent
  const response = await generateResponseByIntent(userMessage, intent, effectiveContext);

  return response;
}

function detectIntent(message: string): string {
  const lowerMessage = message.toLowerCase();
  
  if (lowerMessage.includes('voo') || lowerMessage.includes('passagem') || lowerMessage.includes('viag')) {
    return 'flight_quote';
  }
  if (lowerMessage.includes('hotel') || lowerMessage.includes('hospeda')) {
    return 'hotel_quote';
  }
  if (lowerMessage.includes('carro') || lowerMessage.includes('aluguel')) {
    return 'car_rental';
  }
  if (lowerMessage.includes('seguro')) {
    return 'insurance_quote';
  }
  if (lowerMessage.includes('pre√ßo') || lowerMessage.includes('custo') || lowerMessage.includes('valor')) {
    return 'pricing_inquiry';
  }
  if (lowerMessage.includes('humano') || lowerMessage.includes('pessoa') || lowerMessage.includes('atendente')) {
    return 'human_transfer';
  }
  if (lowerMessage.includes('obrigad') || lowerMessage.includes('tchau') || lowerMessage.includes('at√© logo')) {
    return 'farewell';
  }
  
  return 'general_inquiry';
}

async function generateResponseByIntent(message: string, intent: string, context: ChatContext): Promise<{content: string; type: string; metadata?: any; action?: string; data?: Record<string, unknown>}> {
  const responses = {
    flight_quote: {
      content: '‚úàÔ∏è Perfeito! Vou te ajudar com a cota√ß√£o de voos. Para encontrar as melhores op√ß√µes, preciso de alguns detalhes:\n\nüìç Qual a origem e destino?\nüìÖ Quais as datas de ida e volta?\nüë• Quantos passageiros?\nüí∫ Prefere classe econ√¥mica ou executiva?\n\nüéØ Cota√ß√£o gratuita em at√© 2 horas!',
      type: 'quick_reply',
      metadata: {
        buttons: [
          { text: 'üá∫üá∏ ‚û°Ô∏è üáßüá∑ EUA para Brasil', action: 'quote_flight', data: { direction: 'usa_brazil' } },
          { text: 'üáßüá∑ ‚û°Ô∏è üá∫üá∏ Brasil para EUA', action: 'quote_flight', data: { direction: 'brazil_usa' } },
          { text: 'üìù Formul√°rio Completo', action: 'redirect_quote', data: { type: 'voos' } }
        ]
      }
    },
    documentation_inquiry: {
      content: 'üìã Documenta√ß√£o √© fundamental! Para viajar Brasil-EUA voc√™ precisa:\n\n‚úÖ **Obrigat√≥rios:**\n‚Ä¢ Passaporte brasileiro v√°lido (6+ meses)\n‚Ä¢ Visto americano v√°lido (turista/neg√≥cios)\n‚Ä¢ Comprovante de vacina√ß√£o COVID-19 (se exigido)\n\n‚úÖ **Recomendados:**\n‚Ä¢ CNH internacional para dirigir\n‚Ä¢ Seguro sa√∫de/viagem\n‚Ä¢ Comprovante de hospedagem',
      type: 'quick_reply',
      metadata: {
        buttons: [
          { text: 'üõÇ Sobre Vistos', action: 'visa_info' },
          { text: 'üöó CNH Internacional', action: 'license_info' },
          { text: 'üë®‚Äçüíº Falar com Especialista', action: 'transfer_human' }
        ]
      }
    },
    baggage_inquiry: {
      content: 'üß≥ Informa√ß√µes sobre bagagem:\n\n‚úÖ **Permitido:**\n‚Ä¢ Bagagem de m√£o: 10kg\n‚Ä¢ Bagagem despachada: 23kg (econ√¥mica), 32kg (executiva)\n‚Ä¢ Produtos industrializados lacrados\n‚Ä¢ Chocolates, caf√©, doces\n\n‚ùå **Proibido:**\n‚Ä¢ Perec√≠veis (frutas, verduras)\n‚Ä¢ Carnes e derivados\n‚Ä¢ Queijos e latic√≠nios\n‚Ä¢ Plantas e sementes\n\nüí∞ **Excesso:** $100-200 por bagagem extra',
      type: 'quick_reply',
      metadata: {
        buttons: [
          { text: 'üì¶ Lista Completa', action: 'baggage_details' },
          { text: '‚úàÔ∏è Cotar Voo', action: 'quote_flight' },
          { text: 'üë®‚Äçüíº Especialista', action: 'transfer_human' }
        ]
      }
    },
    urgent_inquiry: {
      content: 'üö® Entendo que √© urgente! Estou aqui para ajudar:\n\n‚ö° **Para emerg√™ncias:**\n‚Ä¢ Cancelamentos: Conforme pol√≠tica da companhia\n‚Ä¢ Problemas de voo: Suporte 24h\n‚Ä¢ Quest√µes m√©dicas: Assist√™ncia imediata\n\nüìû **Contato direto:**\n‚Ä¢ WhatsApp: 24h dispon√≠vel\n‚Ä¢ Telefone: Seg-Sex 9h-18h EST',
      type: 'quick_reply',
      action: 'urgent_transfer',
      metadata: {
        buttons: [
          { text: 'üì± WhatsApp Urgente', action: 'whatsapp_urgent' },
          { text: 'üìû Ligar Agora', action: 'call_urgent' },
          { text: 'üë®‚Äçüíº Especialista', action: 'transfer_human' }
        ]
      }
    },
    hotel_quote: {
      content: 'üè® √ìtima escolha! Temos parcerias com os melhores hot√©is em todo o Brasil. Em qual cidade voc√™ pretende se hospedar?\n\nüåü Algumas op√ß√µes populares:\n‚Ä¢ S√£o Paulo - Centro financeiro\n‚Ä¢ Rio de Janeiro - Praias e pontos tur√≠sticos\n‚Ä¢ Salvador - Hist√≥ria e cultura\n‚Ä¢ Fortaleza - Praias paradis√≠acas',
      type: 'quick_reply',
      metadata: {
        buttons: [
          { text: 'üèôÔ∏è S√£o Paulo', action: 'quote_hotel', data: { city: 'sao_paulo' } },
          { text: 'üèñÔ∏è Rio de Janeiro', action: 'quote_hotel', data: { city: 'rio_janeiro' } },
          { text: 'üå¥ Outras Cidades', action: 'quote_hotel', data: { city: 'other' } },
          { text: 'üìù Formul√°rio Completo', action: 'redirect_quote', data: { type: 'hoteis' } }
        ]
      }
    },
    car_rental: {
      content: 'üöó Perfeito! Oferecemos aluguel de carros em todo o Brasil com as melhores locadoras:\n\nüè¢ Parceiros: Localiza, Hertz, Avis, Budget\nüìç Retirada: Aeroportos e centros urbanos\n\nEm qual cidade voc√™ precisa do carro?',
      type: 'quick_reply',
      metadata: {
        buttons: [
          { text: '‚úàÔ∏è No Aeroporto', action: 'quote_car', data: { pickup: 'airport' } },
          { text: 'üèôÔ∏è Centro da Cidade', action: 'quote_car', data: { pickup: 'downtown' } },
          { text: 'üìù Formul√°rio Completo', action: 'redirect_quote', data: { type: 'carros' } }
        ]
      }
    },
    insurance_quote: {
      content: 'üõ°Ô∏è Seguro viagem √© essencial! Oferecemos cobertura completa para suas viagens:\n\n‚úÖ Cobertura m√©dica internacional\n‚úÖ Seguro bagagem\n‚úÖ Cancelamento de viagem\n‚úÖ Assist√™ncia 24h\n\nPara onde voc√™ vai viajar?',
      type: 'quick_reply',
      metadata: {
        buttons: [
          { text: 'üáßüá∑ Brasil', action: 'quote_insurance', data: { destination: 'brazil' } },
          { text: 'üåç Europa', action: 'quote_insurance', data: { destination: 'europe' } },
          { text: 'üåé Mundial', action: 'quote_insurance', data: { destination: 'worldwide' } },
          { text: 'üìù Formul√°rio Completo', action: 'redirect_quote', data: { type: 'seguro' } }
        ]
      }
    },
    pricing_inquiry: {
      content: 'üí∞ Nossos pre√ßos s√£o sempre competitivos! Alguns exemplos de rotas populares:\n\n‚úàÔ∏è **Voos Brasil-EUA:**\n‚Ä¢ Miami ‚Üî S√£o Paulo: $650-900\n‚Ä¢ NY ‚Üî Rio de Janeiro: $720-1100\n‚Ä¢ Orlando ‚Üî S√£o Paulo: $680-950\n\nüéØ **Garantimos:**\n‚Ä¢ Cota√ß√£o gratuita em 2h\n‚Ä¢ Melhores pre√ßos do mercado\n‚Ä¢ Atendimento especializado',
      type: 'quick_reply',
      metadata: {
        buttons: [
          { text: '‚úàÔ∏è Cotar Voo Espec√≠fico', action: 'quote_flight' },
          { text: 'üìû Falar com Especialista', action: 'transfer_human' },
          { text: 'üì± WhatsApp', action: 'whatsapp' }
        ]
      }
    },
    human_transfer: {
      content: 'üë®‚Äçüíº Claro! Vou conectar voc√™ com um de nossos especialistas. Eles t√™m mais de 10 anos de experi√™ncia ajudando brasileiros nos EUA.\n\n‚è∞ **Hor√°rio de Atendimento:**\n‚Ä¢ Segunda a Sexta: 9h √†s 18h (EST)\n‚Ä¢ S√°bado: 9h √†s 14h (EST)\n‚Ä¢ Emerg√™ncias: 24h via WhatsApp',
      type: 'quick_reply',
      action: 'transfer_human',
      metadata: {
        buttons: [
          { text: 'üìû Ligar Agora', action: 'call_now' },
          { text: 'üì± WhatsApp', action: 'whatsapp' },
          { text: 'üìß Email', action: 'email' }
        ]
      }
    },
    farewell: {
      content: 'üòä Foi um prazer te ajudar! Lembre-se:\n\nüéØ Cota√ß√£o sempre gratuita em at√© 2h\nüìû Atendimento 24h via WhatsApp\n‚úàÔ∏è Mais de 10 anos cuidando de brasileiros nos EUA\n\nAt√© logo e boa viagem! üõ´',
      type: 'text'
    },
    general_inquiry: {
      content: 'üòä Ol√°! Sou a Ana da Fly2Any, sua especialista em viagens Brasil-EUA!\n\nüéØ **Posso te ajudar com:**\n‚Ä¢ ‚úàÔ∏è Voos Brasil ‚Üî EUA\n‚Ä¢ üè® Hot√©is no Brasil\n‚Ä¢ üöó Aluguel de carros\n‚Ä¢ üõ°Ô∏è Seguro viagem\n‚Ä¢ üéí Passeios e turismo\n\nComo posso te ajudar hoje?',
      type: 'quick_reply',
      metadata: {
        buttons: [
          { text: '‚úàÔ∏è Cota√ß√£o de Voos', action: 'quote_flight' },
          { text: 'üè® Hot√©is no Brasil', action: 'quote_hotel' },
          { text: 'üë®‚Äçüíº Falar com Humano', action: 'transfer_human' }
        ]
      }
    }
  };

  return responses[intent as keyof typeof responses] || responses.general_inquiry;
}

export async function POST(request: NextRequest) {
  try {
    await initializeChatTables();
    
    const body: ChatRequest = await request.json();
    const { sessionId, message, metadata, userInfo, context } = body;

    // Save user message
    await saveMessage(sessionId, message, 'user');
    
    // Update session with user info if provided
    if (userInfo) {
      await updateSession(sessionId, userInfo);
    }

    // Handle special actions
    if (metadata?.action) {
      let response;
      
      switch (metadata.action) {
        case 'quote_flight':
        case 'quote_hotel':
        case 'quote_car':
        case 'quote_insurance':
          response = {
            content: `Perfeito! Vou te direcionar para o formul√°rio de ${metadata.action.replace('quote_', '')}. L√° voc√™ pode preencher todos os detalhes e receber uma cota√ß√£o personalizada em at√© 2 horas! üéØ`,
            type: 'quick_reply',
            action: 'redirect_quote',
            data: { type: metadata.action.replace('quote_', '') },
            metadata: {
              buttons: [
                { text: 'üìù Ir para Formul√°rio', action: 'redirect_quote', data: { type: metadata.action.replace('quote_', '') } },
                { text: 'üí¨ Continuar Chat', action: 'continue_chat' }
              ]
            }
          };
          break;
          
        case 'transfer_human':
          response = {
            content: 'üë®‚Äçüíº Transferindo voc√™ para um especialista humano. Por favor, deixe seu contato para que possamos retornar:',
            type: 'form',
            action: 'show_contact_form',
            metadata: {
              form: {
                type: 'contact',
                fields: [
                  { name: 'name', label: 'Nome Completo', type: 'text', required: true },
                  { name: 'email', label: 'Email', type: 'email', required: true },
                  { name: 'phone', label: 'Telefone/WhatsApp', type: 'tel', required: true }
                ]
              }
            }
          };
          break;
          
        default:
          response = await generateAIResponse(message, { ...context, userInfo });
      }
      
      // Save agent response
      await saveMessage(sessionId, response.content, 'agent', response.type, response.metadata);
      
      return NextResponse.json({
        success: true,
        response
      });
    }

    // Generate AI response
    const response = await generateAIResponse(message, { ...context, userInfo });
    
    // Save agent response
    await saveMessage(sessionId, response.content, 'agent', response.type, response.metadata);

    // Send to N8N webhook for analytics/automation
    try {
      await fetch(process.env.N8N_WEBHOOK_CHAT || '', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          type: 'chat_interaction',
          sessionId,
          userMessage: message,
          agentResponse: response.content,
          intent: detectIntent(message),
          userInfo,
          timestamp: new Date().toISOString()
        })
      });
    } catch (webhookError) {
      console.warn('N8N webhook failed:', webhookError);
    }

    return NextResponse.json({
      success: true,
      response
    });

  } catch (error) {
    console.error('Chat agent error:', error);
    return NextResponse.json(
      { error: 'Erro interno do chat agent' },
      { status: 500 }
    );
  }
}
