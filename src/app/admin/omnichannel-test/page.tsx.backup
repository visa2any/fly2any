'use client';

import React, { useState } from 'react';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import ResponseTemplates from '@/components/omnichannel/ResponseTemplates';
import NotificationSystem from '@/components/omnichannel/NotificationSystem';

interface MockConversation {
  id: number;
  customer: { name: string; phone: string; email: string; };
  channel: 'whatsapp' | 'email' | 'webchat' | 'phone';
  status: 'open' | 'pending' | 'resolved' | 'closed';
  priority: 'low' | 'normal' | 'high' | 'urgent';
  lastMessage: string;
  timestamp: Date;
  unreadCount: number;
  agent?: string;
}

const mockConversations: MockConversation[] = [
  {
    id: 1,
    customer: { name: 'Maria Silva', phone: '+55 11 99999-1234', email: 'maria@email.com' },
    channel: 'whatsapp', status: 'open', priority: 'high',
    lastMessage: 'Gostaria de saber sobre os voos para S√£o Paulo...',
    timestamp: new Date(Date.now() - 2 * 60 * 1000), unreadCount: 3, agent: 'Jo√£o'
  },
  {
    id: 2,
    customer: { name: 'Jo√£o Santos', phone: '+55 11 88888-5678', email: 'joao@email.com' },
    channel: 'email', status: 'pending', priority: 'normal',
    lastMessage: 'Preciso alterar a data da minha viagem...',
    timestamp: new Date(Date.now() - 15 * 60 * 1000), unreadCount: 0, agent: 'Maria'
  },
  {
    id: 3,
    customer: { name: 'Ana Costa', phone: '+55 11 77777-9999', email: 'ana@email.com' },
    channel: 'webchat', status: 'open', priority: 'normal',
    lastMessage: 'Qual o melhor seguro viagem para o Brasil?',
    timestamp: new Date(Date.now() - 60 * 60 * 1000), unreadCount: 1, agent: 'Carlos'
  }
];

const cardStyle = {
  backgroundColor: 'white',
  padding: '20px',
  borderRadius: '12px',
  boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',
  border: '1px solid #e5e7eb',
  marginBottom: '20px'
};

const buttonStyle = {
  padding: '10px 16px',
  borderRadius: '8px',
  fontSize: '14px',
  fontWeight: '500',
  cursor: 'pointer',
  transition: 'all 0.2s',
  border: '1px solid #d1d5db'
};

export default function OmnichannelTestPage() {
  const [conversations, setConversations] = useState<MockConversation[]>(mockConversations);
  const [selectedConversation, setSelectedConversation] = useState<MockConversation | null>(null);
  const [view, setView] = useState<'dashboard' | 'chat' | 'templates' | 'customer360'>('dashboard');
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedChannel, setSelectedChannel] = useState('all');
  const [selectedStatus, setSelectedStatus] = useState('all');
  const [newMessage, setNewMessage] = useState('');
  const [showTemplates, setShowTemplates] = useState(false);

  const filteredConversations = conversations.filter(conv => {
    const matchesSearch = conv.customer.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         conv.lastMessage.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesChannel = selectedChannel === 'all' || conv.channel === selectedChannel;
    const matchesStatus = selectedStatus === 'all' || conv.status === selectedStatus;
    return matchesSearch && matchesChannel && matchesStatus;
  });

  const getChannelIcon = (channel: string) => {
    switch (channel) {
      case 'whatsapp': return 'üì±';
      case 'email': return 'üìß';
      case 'webchat': return 'üí¨';
      case 'phone': return 'üìû';
      default: return 'üåê';
    }
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'open': return 'bg-green-100 text-green-800';
      case 'pending': return 'bg-yellow-100 text-yellow-800';
      case 'resolved': return 'bg-blue-100 text-blue-800';
      case 'closed': return 'bg-gray-100 text-gray-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  const getPriorityColor = (priority: string) => {
    switch (priority) {
      case 'urgent': return 'bg-red-100 text-red-800';
      case 'high': return 'bg-orange-100 text-orange-800';
      case 'normal': return 'bg-blue-100 text-blue-800';
      case 'low': return 'bg-gray-100 text-gray-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  const formatTime = (date: Date) => {
    const now = new Date();
    const diff = now.getTime() - date.getTime();
    const minutes = Math.floor(diff / (1000 * 60));
    
    if (minutes < 1) return 'agora';
    if (minutes < 60) return `h√° ${minutes}min`;
    if (minutes < 1440) return `h√° ${Math.floor(minutes / 60)}h`;
    return `h√° ${Math.floor(minutes / 1440)}d`;
  };

  const sendMessage = () => {
    if (!newMessage.trim() || !selectedConversation) return;
    
    setSelectedConversation({
      ...selectedConversation,
      lastMessage: newMessage,
      timestamp: new Date()
    });
    
    setNewMessage('');
    alert('Mensagem enviada com sucesso!');
  };

  const handleTemplateSelect = (template: { content: string }) => {
    setNewMessage(template.content);
    setShowTemplates(false);
  };

  const handleConversationClick = (conversation: MockConversation) => {
    setSelectedConversation(conversation);
    setView('chat');
    
    const updatedConversations = conversations.map(conv => 
      conv.id === conversation.id 
        ? { ...conv, unreadCount: 0 }
        : conv
    );
    setConversations(updatedConversations);
  };

  const updateConversationStatus = (conversationId: number, newStatus: string) => {
    const updatedConversations = conversations.map(conv =>
      conv.id === conversationId
        ? { ...conv, status: newStatus as any }
        : conv
    );
    setConversations(updatedConversations);
    
    if (selectedConversation?.id === conversationId) {
      setSelectedConversation({ ...selectedConversation, status: newStatus as any });
    }
  };

  const stats = {
    totalConversations: conversations.length,
    activeConversations: conversations.filter(c => c.status === 'open').length,
    pendingConversations: conversations.filter(c => c.status === 'pending').length,
    avgResponseTime: 1.2,
    customerSatisfaction: 4.9
  };

  return (
    <div style={{ backgroundColor: '#f8fafc', minHeight: '100vh', fontFamily: 'system-ui, -apple-system, sans-serif' }}>
      {/* Success Banner */}
      <div style={{
        backgroundColor: '#10b981',
        color: 'white',
        padding: '12px 0',
        textAlign: 'center',
        fontSize: '14px',
        fontWeight: '600'
      }}>
        ‚úÖ CENTRAL DE COMUNICA√á√ÉO FUNCIONANDO! Sistema omnichannel completo com todas as funcionalidades
      </div>

      {/* Header */}
      <div style={{
        backgroundColor: 'white',
        boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',
        borderBottom: '1px solid #e5e7eb',
        padding: '20px 0'
      }}>
        <div style={{ width: '100%', padding: '0 20px' }}>
          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>
            <div style={{ display: 'flex', alignItems: 'center', gap: '16px' }}>
              <div style={{
                width: '48px', height: '48px', backgroundColor: '#3b82f6', borderRadius: '12px',
                display: 'flex', alignItems: 'center', justifyContent: 'center',
                color: 'white', fontSize: '20px', fontWeight: 'bold'
              }}>üåê</div>
              <div>
                <h1 style={{ fontSize: '28px', fontWeight: 'bold', color: '#1f2937', margin: '0 0 4px 0' }}>
                  Central de Comunica√ß√£o
                </h1>
                <p style={{ fontSize: '14px', color: '#6b7280', margin: '0' }}>
                  Atendimento omnichannel unificado
                </p>
              </div>
            </div>
            
            <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
              <NotificationSystem 
                agentId={1}
                onNotificationClick={(notification) => {
                  if (notification.conversationId) {
                    const conv = conversations.find(c => c.id === notification.conversationId);
                    if (conv) handleConversationClick(conv);
                  }
                }}
              />
              <button
                onClick={() => setView('dashboard')}
                style={{
                  ...buttonStyle,
                  backgroundColor: view === 'dashboard' ? '#3b82f6' : 'white',
                  color: view === 'dashboard' ? 'white' : '#374151'
                }}
              >
                üìä Dashboard
              </button>
              <button
                onClick={() => setView('templates')}
                style={{
                  ...buttonStyle,
                  backgroundColor: view === 'templates' ? '#3b82f6' : 'white',
                  color: view === 'templates' ? 'white' : '#374151'
                }}
              >
                üìù Templates
              </button>
            </div>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div style={{ width: '100%', padding: '20px' }}>
        {view === 'dashboard' && (
          <div style={{ display: 'grid', gridTemplateColumns: '300px 1fr', gap: '24px' }}>
            {/* Left Sidebar - Metrics & Channels */}
            <div style={{ display: 'flex', flexDirection: 'column', gap: '16px' }}>
              {/* Quick Metrics */}
              <div style={cardStyle}>
                <h3 style={{ fontSize: '16px', fontWeight: 'bold', color: '#1f2937', margin: '0 0 16px 0' }}>
                  üìä M√©tricas R√°pidas
                </h3>
                <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>
                  {[
                    { label: 'Conversas Ativas', value: stats.activeConversations, color: '#10b981' },
                    { label: 'Pendentes', value: stats.pendingConversations, color: '#f59e0b' },
                    { label: 'Tempo M√©dio', value: `${stats.avgResponseTime}min`, color: '#8b5cf6' }
                  ].map((stat, index) => (
                    <div key={index} style={{
                      padding: '12px',
                      backgroundColor: '#f8fafc',
                      borderRadius: '8px',
                      display: 'flex',
                      justifyContent: 'space-between',
                      alignItems: 'center'
                    }}>
                      <span style={{ fontSize: '14px', fontWeight: '500' }}>{stat.label}</span>
                      <span style={{ fontSize: '18px', fontWeight: 'bold', color: stat.color }}>{stat.value}</span>
                    </div>
                  ))}
                </div>
              </div>

              {/* Channel Status */}
              <div style={cardStyle}>
                <h3 style={{ fontSize: '16px', fontWeight: 'bold', color: '#1f2937', margin: '0 0 16px 0' }}>
                  üì± Status dos Canais
                </h3>
                <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>
                  {[
                    { icon: 'üì±', name: 'WhatsApp Business', count: '8 ativas', color: '#16a34a' },
                    { icon: 'üìß', name: 'Email SMTP', count: '2 ativas', color: '#2563eb' },
                    { icon: 'üí¨', name: 'Chat Website', count: '2 ativas', color: '#9333ea' },
                    { icon: 'üìû', name: 'Telefone VoIP', count: 'Configurar', color: '#d97706' }
                  ].map((channel, index) => (
                    <div key={index} style={{
                      padding: '12px',
                      border: '1px solid #e5e7eb',
                      borderRadius: '8px',
                      display: 'flex',
                      justifyContent: 'space-between',
                      alignItems: 'center'
                    }}>
                      <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                        <span style={{ fontSize: '16px' }}>{channel.icon}</span>
                        <span style={{ fontSize: '14px', fontWeight: '600' }}>{channel.name}</span>
                      </div>
                      <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                        <div style={{
                          width: '8px',
                          height: '8px',
                          backgroundColor: channel.color,
                          borderRadius: '50%'
                        }}></div>
                        <span style={{ fontSize: '12px', color: channel.color, fontWeight: '600' }}>
                          {channel.count}
                        </span>
                      </div>
                    </div>
                  ))}
                </div>
              </div>

              {/* Quick Actions */}
              <div style={cardStyle}>
                <h3 style={{ fontSize: '16px', fontWeight: 'bold', color: '#1f2937', margin: '0 0 16px 0' }}>
                  ‚ö° A√ß√µes R√°pidas
                </h3>
                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>
                  {[
                    { icon: 'üì¢', label: 'Enviar Broadcast', color: '#3b82f6', action: () => alert('Funcionalidade de Broadcast em desenvolvimento') },
                    { icon: 'üë•', label: 'Gerenciar Agentes', color: '#10b981', action: () => alert('Funcionalidade de Agentes em desenvolvimento') },
                    { icon: 'ü§ñ', label: 'Configurar Bot', color: '#f59e0b', action: () => alert('Funcionalidade de Bot em desenvolvimento') },
                    { icon: 'üìã', label: 'Templates', color: '#8b5cf6', action: () => setView('templates') }
                  ].map((action, index) => (
                    <button key={index} onClick={action.action} style={{
                      padding: '12px',
                      backgroundColor: action.color,
                      color: 'white',
                      border: 'none',
                      borderRadius: '8px',
                      fontSize: '14px',
                      fontWeight: '500',
                      cursor: 'pointer',
                      textAlign: 'left',
                      display: 'flex',
                      alignItems: 'center',
                      gap: '8px'
                    }}>
                      <span>{action.icon}</span>
                      {action.label}
                    </button>
                  ))}
                </div>
              </div>
            </div>

            {/* Right Side - Conversations and Management */}
            <div style={{ display: 'flex', flexDirection: 'column', gap: '16px' }}>
              {/* Stats Cards */}
              <div style={{
                display: 'grid',
                gridTemplateColumns: 'repeat(auto-fit, minmax(180px, 1fr))',
                gap: '16px'
              }}>
                {[
                  { label: 'Total', value: stats.totalConversations, color: '#3b82f6', icon: 'üí¨' },
                  { label: 'Ativas', value: stats.activeConversations, color: '#10b981', icon: 'üü¢' },
                  { label: 'Pendentes', value: stats.pendingConversations, color: '#f59e0b', icon: '‚è≥' },
                  { label: 'Satisfa√ß√£o', value: `${stats.customerSatisfaction}/5`, color: '#fbbf24', icon: '‚≠ê' }
                ].map((stat, index) => (
                  <div key={index} style={cardStyle}>
                    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>
                      <div>
                        <p style={{ fontSize: '14px', color: '#6b7280', margin: '0 0 4px 0' }}>{stat.label}</p>
                        <p style={{ fontSize: '24px', fontWeight: 'bold', color: stat.color, margin: '0' }}>
                          {stat.value}
                        </p>
                      </div>
                      <div style={{ fontSize: '24px' }}>{stat.icon}</div>
                    </div>
                  </div>
                ))}
              </div>

            {/* Filters */}
            <div style={cardStyle}>
              <div style={{ display: 'flex', flexWrap: 'wrap', gap: '16px', alignItems: 'center' }}>
                <input
                  placeholder="üîç Buscar conversas..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  style={{
                    padding: '10px 16px', border: '1px solid #d1d5db', borderRadius: '8px',
                    fontSize: '14px', width: '300px', outline: 'none'
                  }}
                />
                <select
                  value={selectedChannel}
                  onChange={(e) => setSelectedChannel(e.target.value)}
                  style={{
                    padding: '10px 16px', border: '1px solid #d1d5db', borderRadius: '8px',
                    fontSize: '14px', backgroundColor: 'white', cursor: 'pointer', outline: 'none'
                  }}
                >
                  <option value="all">Todos os Canais</option>
                  <option value="whatsapp">üì± WhatsApp</option>
                  <option value="email">üìß Email</option>
                  <option value="webchat">üí¨ Chat Web</option>
                  <option value="phone">üìû Telefone</option>
                </select>
                <select
                  value={selectedStatus}
                  onChange={(e) => setSelectedStatus(e.target.value)}
                  style={{
                    padding: '10px 16px', border: '1px solid #d1d5db', borderRadius: '8px',
                    fontSize: '14px', backgroundColor: 'white', cursor: 'pointer', outline: 'none'
                  }}
                >
                  <option value="all">Todos os Status</option>
                  <option value="open">üü¢ Ativas</option>
                  <option value="pending">üü° Pendentes</option>
                  <option value="resolved">üîµ Resolvidas</option>
                  <option value="closed">‚ö´ Fechadas</option>
                </select>
                <button
                  onClick={() => {
                    setSearchTerm('');
                    setSelectedChannel('all');
                    setSelectedStatus('all');
                  }}
                  style={{ ...buttonStyle, backgroundColor: '#f3f4f6', color: '#374151' }}
                >
                  üîÑ Limpar Filtros
                </button>
              </div>
            </div>

            {/* Conversations List */}
            <div style={cardStyle}>
              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '16px' }}>
                <h2 style={{ fontSize: '18px', fontWeight: '600', margin: '0' }}>
                  Conversas ({filteredConversations.length})
                </h2>
                <button
                  onClick={() => setConversations([...mockConversations])}
                  style={{ ...buttonStyle, backgroundColor: '#f3f4f6', color: '#374151' }}
                >
                  üîÑ Atualizar
                </button>
              </div>
              
              <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>
                {filteredConversations.map((conversation) => (
                  <div
                    key={conversation.id}
                    onClick={() => handleConversationClick(conversation)}
                    style={{
                      padding: '16px',
                      border: '1px solid #e5e7eb',
                      borderRadius: '8px',
                      cursor: 'pointer',
                      transition: 'all 0.2s',
                      backgroundColor: 'white'
                    }}
                    onMouseEnter={(e) => {
                      e.currentTarget.style.backgroundColor = '#f9fafb';
                    }}
                    onMouseLeave={(e) => {
                      e.currentTarget.style.backgroundColor = 'white';
                    }}
                  >
                    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>
                      <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
                        <div style={{ position: 'relative' }}>
                          <span style={{ fontSize: '24px' }}>{getChannelIcon(conversation.channel)}</span>
                          {conversation.unreadCount > 0 && (
                            <span style={{
                              position: 'absolute',
                              top: '-4px',
                              right: '-4px',
                              backgroundColor: '#ef4444',
                              color: 'white',
                              borderRadius: '50%',
                              width: '20px',
                              height: '20px',
                              display: 'flex',
                              alignItems: 'center',
                              justifyContent: 'center',
                              fontSize: '10px',
                              fontWeight: 'bold'
                            }}>
                              {conversation.unreadCount}
                            </span>
                          )}
                        </div>
                        <div>
                          <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                            <span style={{ fontWeight: '500' }}>{conversation.customer.name}</span>
                            <Badge variant="outline" className="text-xs">
                              {conversation.channel}
                            </Badge>
                          </div>
                          <p style={{
                            fontSize: '14px',
                            color: '#6b7280',
                            margin: '4px 0',
                            maxWidth: '400px',
                            overflow: 'hidden',
                            textOverflow: 'ellipsis',
                            whiteSpace: 'nowrap'
                          }}>
                            {conversation.lastMessage}
                          </p>
                          <div style={{ display: 'flex', alignItems: 'center', gap: '8px', marginTop: '4px' }}>
                            <Badge className={`text-xs ${getStatusColor(conversation.status)}`}>
                              {conversation.status}
                            </Badge>
                            <Badge className={`text-xs ${getPriorityColor(conversation.priority)}`}>
                              {conversation.priority}
                            </Badge>
                            {conversation.agent && (
                              <span style={{ fontSize: '12px', color: '#6b7280' }}>
                                Agente: {conversation.agent}
                              </span>
                            )}
                          </div>
                        </div>
                      </div>
                      
                      <div style={{ textAlign: 'right' }}>
                        <div style={{ fontSize: '12px', color: '#6b7280', marginBottom: '8px' }}>
                          {formatTime(conversation.timestamp)}
                        </div>
                        <div style={{ display: 'flex', gap: '4px' }}>
                          <button
                            onClick={(e) => {
                              e.stopPropagation();
                              setSelectedConversation(conversation);
                              setView('customer360');
                            }}
                            style={{
                              padding: '4px 8px',
                              fontSize: '12px',
                              backgroundColor: '#8b5cf6',
                              color: 'white',
                              border: 'none',
                              borderRadius: '4px',
                              cursor: 'pointer'
                            }}
                          >
                            üë§ 360¬∞
                          </button>
                          <button
                            onClick={(e) => {
                              e.stopPropagation();
                              updateConversationStatus(conversation.id, 'resolved');
                            }}
                            style={{
                              padding: '4px 8px',
                              fontSize: '12px',
                              backgroundColor: '#f3f4f6',
                              color: '#374151',
                              border: '1px solid #d1d5db',
                              borderRadius: '4px',
                              cursor: 'pointer'
                            }}
                          >
                            ‚úÖ Resolver
                          </button>
                          <button
                            onClick={(e) => {
                              e.stopPropagation();
                              handleConversationClick(conversation);
                            }}
                            style={{
                              padding: '4px 8px',
                              fontSize: '12px',
                              backgroundColor: '#3b82f6',
                              color: 'white',
                              border: 'none',
                              borderRadius: '4px',
                              cursor: 'pointer'
                            }}
                          >
                            üí¨ Responder
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
        )}

        {view === 'chat' && selectedConversation && (
          <div style={{ display: 'grid', gridTemplateColumns: '1fr 400px', gap: '24px' }}>
            <div style={cardStyle}>
              <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '16px' }}>
                <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
                  <button
                    onClick={() => setView('dashboard')}
                    style={{ ...buttonStyle, backgroundColor: '#f3f4f6', color: '#374151' }}
                  >
                    ‚Üê Voltar
                  </button>
                  <span style={{ fontSize: '24px' }}>{getChannelIcon(selectedConversation.channel)}</span>
                  <div>
                    <h3 style={{ fontWeight: '600', margin: '0' }}>{selectedConversation.customer.name}</h3>
                    <p style={{ fontSize: '14px', color: '#6b7280', margin: '0' }}>
                      {selectedConversation.customer.phone}
                    </p>
                  </div>
                </div>
                <div style={{ display: 'flex', gap: '8px' }}>
                  <Badge className={`text-xs ${getStatusColor(selectedConversation.status)}`}>
                    {selectedConversation.status}
                  </Badge>
                  <Badge className={`text-xs ${getPriorityColor(selectedConversation.priority)}`}>
                    {selectedConversation.priority}
                  </Badge>
                </div>
              </div>

              {/* Messages */}
              <div style={{
                height: '400px',
                overflowY: 'auto',
                backgroundColor: '#f8fafc',
                borderRadius: '8px',
                padding: '16px',
                marginBottom: '16px'
              }}>
                <div style={{ display: 'flex', justifyContent: 'flex-start', marginBottom: '16px' }}>
                  <div style={{
                    maxWidth: '70%',
                    backgroundColor: 'white',
                    padding: '12px',
                    borderRadius: '12px',
                    border: '1px solid #e5e7eb'
                  }}>
                    <p style={{ fontSize: '14px', margin: '0 0 4px 0' }}>
                      {selectedConversation.lastMessage}
                    </p>
                    <span style={{ fontSize: '12px', color: '#6b7280' }}>
                      {formatTime(selectedConversation.timestamp)}
                    </span>
                  </div>
                </div>

                <div style={{ display: 'flex', justifyContent: 'flex-end', marginBottom: '16px' }}>
                  <div style={{
                    maxWidth: '70%',
                    backgroundColor: '#3b82f6',
                    color: 'white',
                    padding: '12px',
                    borderRadius: '12px'
                  }}>
                    <p style={{ fontSize: '14px', margin: '0 0 4px 0' }}>
                      Obrigado pelo contato! Vou verificar as op√ß√µes dispon√≠veis.
                    </p>
                    <span style={{ fontSize: '12px', opacity: '0.8' }}>h√° 1min ‚úì‚úì</span>
                  </div>
                </div>
              </div>

              {/* Status Actions */}
              <div style={{ display: 'flex', gap: '8px', marginBottom: '16px' }}>
                {[
                  { status: 'open', label: 'üü¢ Abrir', color: '#10b981' },
                  { status: 'pending', label: 'üü° Pendente', color: '#f59e0b' },
                  { status: 'resolved', label: 'üîµ Resolver', color: '#3b82f6' },
                  { status: 'closed', label: '‚ö´ Fechar', color: '#6b7280' }
                ].map((item) => (
                  <button
                    key={item.status}
                    onClick={() => updateConversationStatus(selectedConversation.id, item.status)}
                    disabled={selectedConversation.status === item.status}
                    style={{
                      ...buttonStyle,
                      backgroundColor: selectedConversation.status === item.status ? '#f3f4f6' : item.color,
                      color: selectedConversation.status === item.status ? '#9ca3af' : 'white',
                      cursor: selectedConversation.status === item.status ? 'not-allowed' : 'pointer'
                    }}
                  >
                    {item.label}
                  </button>
                ))}
              </div>

              {/* Message Input */}
              <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                <button
                  onClick={() => setShowTemplates(!showTemplates)}
                  style={{ ...buttonStyle, backgroundColor: '#f3f4f6', color: '#374151' }}
                >
                  üìù
                </button>
                <Textarea
                  value={newMessage}
                  onChange={(e) => setNewMessage(e.target.value)}
                  placeholder="Digite sua mensagem..."
                  className="flex-1 min-h-[40px] max-h-[100px] resize-none"
                  style={{ flex: 1 }}
                />
                <button
                  onClick={sendMessage}
                  disabled={!newMessage.trim()}
                  style={{
                    ...buttonStyle,
                    backgroundColor: newMessage.trim() ? '#3b82f6' : '#f3f4f6',
                    color: newMessage.trim() ? 'white' : '#9ca3af',
                    cursor: newMessage.trim() ? 'pointer' : 'not-allowed'
                  }}
                >
                  üì® Enviar
                </button>
              </div>
            </div>

            {/* Customer Details Sidebar */}
            <div style={{ display: 'flex', flexDirection: 'column', gap: '16px' }}>
              <div style={cardStyle}>
                <h3 style={{ fontWeight: '600', marginBottom: '12px' }}>Detalhes do Cliente</h3>
                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>
                  {[
                    { label: 'Nome', value: selectedConversation.customer.name },
                    { label: 'Telefone', value: selectedConversation.customer.phone },
                    { label: 'Email', value: selectedConversation.customer.email },
                    { label: 'Canal', value: selectedConversation.channel }
                  ].map((item, index) => (
                    <div key={index}>
                      <span style={{ fontSize: '14px', fontWeight: '500' }}>{item.label}:</span>
                      <p style={{ fontSize: '14px', margin: '0' }}>{item.value}</p>
                    </div>
                  ))}
                </div>
              </div>

              <div style={cardStyle}>
                <h3 style={{ fontWeight: '600', marginBottom: '12px' }}>A√ß√µes R√°pidas</h3>
                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>
                  {[
                    { label: 'üë§ Ver Perfil Completo', action: () => alert('Funcionalidade de perfil em desenvolvimento') },
                    { label: 'üîç Vis√£o 360¬∞ Cliente', action: () => setView('customer360') },
                    { label: 'üìû Ligar', action: () => alert('Funcionalidade de chamada em desenvolvimento') },
                    { label: 'üìß Enviar Email', action: () => alert('Funcionalidade de email em desenvolvimento') },
                    { label: 'üìã Criar Ticket', action: () => alert('Funcionalidade de ticket em desenvolvimento') }
                  ].map((action, index) => (
                    <button
                      key={index}
                      onClick={action.action}
                      style={{
                        ...buttonStyle,
                        backgroundColor: '#f3f4f6',
                        color: '#374151',
                        width: '100%',
                        textAlign: 'left'
                      }}
                    >
                      {action.label}
                    </button>
                  ))}
                </div>
              </div>
            </div>
          </div>
        )}

        {view === 'templates' && (
          <div style={{ width: '100%' }}>
            <div style={cardStyle}>
              <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '16px' }}>
                <h2 style={{ fontSize: '18px', fontWeight: '600', margin: '0' }}>Templates de Resposta</h2>
                <button
                  onClick={() => setView('dashboard')}
                  style={{ ...buttonStyle, backgroundColor: '#f3f4f6', color: '#374151' }}
                >
                  ‚Üê Voltar
                </button>
              </div>
              <ResponseTemplates
                onTemplateSelect={handleTemplateSelect}
                currentChannel="all"
              />
            </div>
          </div>
        )}

        {view === 'customer360' && selectedConversation && (
          <div style={{ width: '100%' }}>
            <div style={cardStyle}>
              <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '16px' }}>
                <h2 style={{ fontSize: '18px', fontWeight: '600', margin: '0' }}>
                  üë§ Vis√£o 360¬∞ - {selectedConversation.customer.name}
                </h2>
                <button
                  onClick={() => setView('dashboard')}
                  style={{ ...buttonStyle, backgroundColor: '#f3f4f6', color: '#374151' }}
                >
                  ‚Üê Voltar
                </button>
              </div>
              
              {/* Customer 360 Timeline */}
              <div style={{ display: 'grid', gridTemplateColumns: '1fr 300px', gap: '20px' }}>
                {/* Timeline Principal */}
                <div>
                  <h3 style={{ fontSize: '16px', fontWeight: '600', marginBottom: '16px' }}>
                    üìä Hist√≥rico Completo de Intera√ß√µes
                  </h3>
                  
                  {/* Mock Timeline Events */}
                  <div style={{ display: 'flex', flexDirection: 'column', gap: '16px' }}>
                    {[
                      {
                        id: 1,
                        type: 'message',
                        title: 'Primeira mensagem via WhatsApp',
                        description: 'Cliente iniciou conversa perguntando sobre pacotes para S√£o Paulo',
                        timestamp: '2024-01-20 10:30',
                        channel: 'whatsapp',
                        icon: 'üì±'
                      },
                      {
                        id: 2,
                        type: 'booking',
                        title: 'Reserva confirmada',
                        description: 'Voo S√£o Paulo ‚Üí Rio de Janeiro, 2 passageiros',
                        timestamp: '2024-01-20 14:15',
                        channel: 'whatsapp',
                        icon: '‚úàÔ∏è',
                        value: 'R$ 1.200,00'
                      },
                      {
                        id: 3,
                        type: 'payment',
                        title: 'Pagamento processado',
                        description: 'Pagamento via PIX aprovado',
                        timestamp: '2024-01-20 14:30',
                        channel: 'system',
                        icon: 'üí≥',
                        value: 'R$ 1.200,00'
                      },
                      {
                        id: 4,
                        type: 'email',
                        title: 'Confirma√ß√£o enviada',
                        description: 'Email de confirma√ß√£o da reserva enviado',
                        timestamp: '2024-01-20 14:35',
                        channel: 'email',
                        icon: 'üìß'
                      },
                      {
                        id: 5,
                        type: 'message',
                        title: 'Mensagem de agradecimento',
                        description: 'Cliente agradeceu pelo atendimento',
                        timestamp: '2024-01-20 16:00',
                        channel: 'whatsapp',
                        icon: 'üí¨'
                      }
                    ].map((event, index) => (
                      <div key={event.id} style={{ display: 'flex', alignItems: 'start', gap: '16px' }}>
                        <div style={{
                          width: '40px',
                          height: '40px',
                          borderRadius: '50%',
                          backgroundColor: '#f3f4f6',
                          display: 'flex',
                          alignItems: 'center',
                          justifyContent: 'center',
                          fontSize: '16px',
                          flexShrink: 0
                        }}>
                          {event.icon}
                        </div>
                        <div style={{ flex: 1 }}>
                          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                            <h4 style={{ fontSize: '14px', fontWeight: '600', margin: '0' }}>{event.title}</h4>
                            <span style={{ fontSize: '12px', color: '#6b7280' }}>{event.timestamp}</span>
                          </div>
                          <p style={{ fontSize: '14px', color: '#6b7280', margin: '4px 0' }}>{event.description}</p>
                          <div style={{ display: 'flex', gap: '8px', alignItems: 'center' }}>
                            <span style={{ fontSize: '12px', color: '#8b5cf6', fontWeight: '500' }}>
                              {event.channel}
                            </span>
                            {event.value && (
                              <span style={{ fontSize: '12px', color: '#10b981', fontWeight: '600' }}>
                                {event.value}
                              </span>
                            )}
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
                
                {/* Sidebar com m√©tricas do cliente */}
                <div style={{ display: 'flex', flexDirection: 'column', gap: '16px' }}>
                  <div style={{ padding: '16px', backgroundColor: '#f8fafc', borderRadius: '8px' }}>
                    <h4 style={{ fontSize: '14px', fontWeight: '600', margin: '0 0 12px 0' }}>
                      üìä M√©tricas do Cliente
                    </h4>
                    <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>
                      <div style={{ display: 'flex', justifyContent: 'space-between' }}>
                        <span style={{ fontSize: '12px', color: '#6b7280' }}>Total Gasto:</span>
                        <span style={{ fontSize: '12px', fontWeight: '600', color: '#10b981' }}>R$ 5.450,00</span>
                      </div>
                      <div style={{ display: 'flex', justifyContent: 'space-between' }}>
                        <span style={{ fontSize: '12px', color: '#6b7280' }}>Reservas:</span>
                        <span style={{ fontSize: '12px', fontWeight: '600' }}>3</span>
                      </div>
                      <div style={{ display: 'flex', justifyContent: 'space-between' }}>
                        <span style={{ fontSize: '12px', color: '#6b7280' }}>Intera√ß√µes:</span>
                        <span style={{ fontSize: '12px', fontWeight: '600' }}>15</span>
                      </div>
                      <div style={{ display: 'flex', justifyContent: 'space-between' }}>
                        <span style={{ fontSize: '12px', color: '#6b7280' }}>Satisfa√ß√£o:</span>
                        <span style={{ fontSize: '12px', fontWeight: '600', color: '#fbbf24' }}>4.8/5 ‚≠ê</span>
                      </div>
                    </div>
                  </div>
                  
                  <div style={{ padding: '16px', backgroundColor: '#f8fafc', borderRadius: '8px' }}>
                    <h4 style={{ fontSize: '14px', fontWeight: '600', margin: '0 0 12px 0' }}>
                      üì± Canais Utilizados
                    </h4>
                    <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>
                      {[
                        { name: 'WhatsApp', count: 12, color: '#10b981' },
                        { name: 'Email', count: 2, color: '#3b82f6' },
                        { name: 'Sistema', count: 1, color: '#8b5cf6' }
                      ].map((channel, index) => (
                        <div key={index} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                          <span style={{ fontSize: '12px', color: '#6b7280' }}>{channel.name}</span>
                          <span style={{ fontSize: '12px', fontWeight: '600', color: channel.color }}>
                            {channel.count} intera√ß√µes
                          </span>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Templates Modal */}
        {showTemplates && view === 'chat' && (
          <div style={{
            position: 'fixed',
            inset: '0',
            backgroundColor: 'rgba(0, 0, 0, 0.5)',
            zIndex: '50',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            padding: '16px'
          }}>
            <div style={{
              backgroundColor: 'white',
              borderRadius: '12px',
              maxWidth: '600px',
              width: '100%',
              maxHeight: '80vh',
              overflowY: 'auto',
              boxShadow: '0 10px 25px rgba(0, 0, 0, 0.1)'
            }}>
              <div style={{
                padding: '16px',
                borderBottom: '1px solid #e5e7eb',
                display: 'flex',
                justifyContent: 'space-between',
                alignItems: 'center'
              }}>
                <h3 style={{ fontWeight: '600', margin: '0' }}>Selecionar Template</h3>
                <button
                  onClick={() => setShowTemplates(false)}
                  style={{
                    background: 'none',
                    border: 'none',
                    fontSize: '18px',
                    cursor: 'pointer',
                    color: '#6b7280'
                  }}
                >
                  ‚úï
                </button>
              </div>
              <div style={{ padding: '16px' }}>
                <ResponseTemplates
                  onTemplateSelect={handleTemplateSelect}
                  currentChannel={selectedConversation?.channel || 'all'}
                />
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}